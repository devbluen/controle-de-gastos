<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Controle de Gastos</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="/styles.css">
</head>

<body class="bg-light text-dark">
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary fixed-top">
        <div class="container">
            <a class="navbar-brand mx-auto" href="#">Controle de Gastos</a>
        </div>
    </nav>

    <div class="container mt-5 pt-5">
        <!-- Resumo -->
        <div class="card shadow-sm mb-4">
            <div class="card-body">
                <h2 class="card-title text-center mb-3">Resumo</h2>
                <div class="row text-center">
                    <div class="col-md-4">
                        <h5 class="text-success"><i class="fas fa-arrow-up"></i> Total de Entradas</h5>
                        <p class="fs-4">R$ <%= totalEntradas.toFixed(2) %></p>
                    </div>
                    <div class="col-md-4">
                        <h5 class="text-danger"><i class="fas fa-arrow-down"></i> Total de Saídas</h5>
                        <p class="fs-4">R$ <%= totalSaidas.toFixed(2) %></p>
                    </div>
                    <div class="col-md-4">
                        <h5 class="text-primary"><i class="fas fa-wallet"></i> Saldo Final</h5>
                        <p class="fs-4">R$ <%= saldo.toFixed(2) %></p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Formulários -->
        <div class="row">
            <div class="col-md-6">
                <div class="card shadow-sm mb-4">
                    <div class="card-body">
                        <h3>Adicionar Gasto</h3>
                        <form class="row g-3" action="/adicionar" method="POST">
                            <div class="col-md-6">
                                <label for="data" class="form-label">Mês/Ano</label>
                                <input type="month" class="form-control" id="data" name="data" required>
                            </div>
                            <div class="col-md-6">
                                <label for="descricao" class="form-label">Descrição</label>
                                <input type="text" class="form-control" id="descricao" name="descricao" required>
                            </div>
                            <div class="col-md-6">
                                <label for="valor" class="form-label">Valor</label>
                                <input type="number" class="form-control" id="valor" name="valor" step="0.01" required>
                            </div>
                            <div class="col-md-6">
                                <label for="tipo" class="form-label">Tipo</label>
                                <select class="form-select" id="tipo" name="tipo" required>
                                    <option value="entrada">Entrada</option>
                                    <option value="saida">Saída</option>
                                </select>
                            </div>
                            <div class="col-md-12 text-end">
                                <button type="submit" class="btn btn-primary">Adicionar</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="card shadow-sm mb-4">
                    <div class="card-body">
                        <h3>Filtrar Período</h3>
                        <form method="GET" action="/" class="row g-3">
                            <div class="col-md-6">
                                <label for="periodo" class="form-label">Selecione o Período</label>
                                <select name="periodo" id="periodo" class="form-select" required>
                                    <option value="todos" <%= periodoSelecionado === "todos" ? "selected" : "" %>>Todos os Períodos</option>
                                    <% periodos.forEach(p => { %>
                                        <option value="<%= p %>" <%= periodoSelecionado === p ? "selected" : "" %>><%= p %></option>
                                    <% }) %>
                                </select>
                            </div>
                            <div class="col-md-12 text-end">
                                <button type="submit" class="btn btn-success">Filtrar</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="card shadow-sm mb-4">
                    <div class="card-body">
                        <h3>Deletar Período</h3>
                        <form action="/deletar-periodo" method="POST" class="row g-3" onsubmit="return confirm('Tem certeza que deseja deletar todos os gastos deste período?')">
                            <div class="col-md-12">
                                <label for="periodoDeletar" class="form-label">Selecione o Período</label>
                                <select name="periodo" id="periodoDeletar" class="form-select" required>
                                    <% periodos.forEach(p => { %>
                                        <option value="<%= p %>"><%= p %></option>
                                    <% }) %>
                                </select>
                            </div>
                            <div class="col-md-12 text-end">
                                <button type="submit" class="btn btn-danger">Deletar</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="card shadow-sm mb-4">
                    <div class="card-body">
                        <h3>Copiar Período</h3>
                        <form action="/copiar" method="POST" class="row g-3">
                            <div class="col-md-6">
                                <label for="origem" class="form-label">Período de Origem</label>
                                <select name="origem" id="origem" class="form-select" required>
                                    <% periodos.forEach(p => { %>
                                        <option value="<%= p %>"><%= p %></option>
                                    <% }) %>
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label for="destino" class="form-label">Período de Destino</label>
                                <input type="month" name="destino" id="destino" class="form-control" required>
                            </div>
                            <div class="col-md-12 text-end">
                                <button type="submit" class="btn btn-primary">Copiar</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            
        </div>

        <!-- Detalhes dos Gastos -->
        <div class="card shadow-sm mb-4">
            <div class="card-body">
                <h3>Detalhes dos Gastos</h3>
                <table class="table table-striped table-bordered">
                    <thead class="table-dark">
                        <tr>
                            <th>Data</th>
                            <th>Descrição</th>
                            <th>Valor (R$)</th>
                            <th>Tipo</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% gastos.forEach(gasto => { %>
                            <tr>
                                <td><%= gasto.data %></td>
                                <td><%= gasto.descricao %></td>
                                <td>R$ <%= gasto.valor.toFixed(2) %></td>
                                <td>
                                    <% if (gasto.tipo === "entrada") { %>
                                        <i class="fas fa-arrow-up text-success" title="Entrada"></i>
                                    <% } else { %>
                                        <i class="fas fa-arrow-down text-danger" title="Saída"></i>
                                    <% } %>
                                </td>
                                <td>
                                    <form action="/deletar/<%= gasto.id %>" method="POST" style="display:inline;">
                                        <button class="btn btn-danger btn-sm">Excluir</button>
                                    </form>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Gráfico -->
        <div class="card shadow-sm mb-4">
            <div class="card-body">
                <h3 class="card-title text-center mb-3">Gráfico de Gastos e Saldo</h3>
                <canvas id="graficoGastos" width="400" height="200"></canvas>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-end p-3">
        <button id="toggle-dark-mode" class="btn btn-outline-secondary">
            Alternar Modo Escuro
        </button>
    </div>

    <!-- Rodapé -->
    <footer class="bg-primary text-light text-center py-3">
        <p class="mb-0">© 2025 Controle de Gastos. Todos os direitos reservados.</p>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const toggleDarkMode = document.getElementById('toggle-dark-mode');
            const ctx = document.getElementById('graficoGastos').getContext('2d');
            let chart = null;

            // Dados do gráfico
            const estatisticas = <%- JSON.stringify(estatisticas) %>;
            const periodos = Object.keys(estatisticas); // Períodos disponíveis
            const valoresGastos = periodos.map(p => estatisticas[p].saida); // Gastos (saídas)
            const valoresSaldo = periodos.map(p => estatisticas[p].entrada - estatisticas[p].saida); // Saldos restantes

            // Função para definir as cores do gráfico com base no tema
            const getChartColors = () => {
                if (document.body.classList.contains('bg-dark')) {
                    return {
                        background: ['rgba(255, 99, 132, 0.2)', 'rgba(75, 192, 192, 0.2)'],
                        border: ['rgba(255, 99, 132, 1)', 'rgba(75, 192, 192, 1)'],
                        text: '#ffffff', // Texto claro no modo dark
                        grid: '#555555'  // Grade escura
                    };
                }
                return {
                    background: ['rgba(255, 99, 132, 0.2)', 'rgba(75, 192, 192, 0.2)'],
                    border: ['rgba(255, 99, 132, 1)', 'rgba(75, 192, 192, 1)'],
                    text: '#000000', // Texto escuro no modo light
                    grid: '#cccccc'  // Grade clara
                };
            };

            // Função para renderizar o gráfico
            const renderChart = () => {
                const colors = getChartColors();
                if (chart) {
                    chart.destroy(); // Destroi o gráfico atual antes de recriar
                }
                chart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: periodos,
                        datasets: [
                            {
                                label: 'Gastos (Saídas)',
                                data: valoresGastos,
                                backgroundColor: colors.background[0],
                                borderColor: colors.border[0],
                                borderWidth: 1
                            },
                            {
                                label: 'Saldo Restante',
                                data: valoresSaldo,
                                backgroundColor: colors.background[1],
                                borderColor: colors.border[1],
                                borderWidth: 1
                            }
                        ]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true,
                                grid: {
                                    color: colors.grid // Cor da grade
                                },
                                ticks: {
                                    color: colors.text // Cor dos textos no eixo Y
                                }
                            },
                            x: {
                                grid: {
                                    color: colors.grid // Cor da grade
                                },
                                ticks: {
                                    color: colors.text // Cor dos textos no eixo X
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                position: 'top',
                                labels: {
                                    color: colors.text // Cor do texto da legenda
                                }
                            },
                            title: {
                                display: true,
                                text: 'Gastos e Saldo por Período',
                                color: colors.text // Cor do título
                            }
                        }
                    }
                });
            };

            // Aplicar tema no carregamento com base na preferência salva
            if (localStorage.getItem('darkMode') === 'enabled') {
                ativarModoEscuro();
            } else {
                desativarModoEscuro();
            }

            // Renderiza o gráfico inicial
            renderChart();

            // Alternar entre os modos claro e escuro
            toggleDarkMode.addEventListener('click', () => {
                if (document.body.classList.contains('bg-dark')) {
                    desativarModoEscuro();
                } else {
                    ativarModoEscuro();
                }
                renderChart(); // Recria o gráfico com as novas cores
            });

            function ativarModoEscuro() {
                document.body.classList.add('bg-dark', 'text-light');
                document.body.classList.remove('bg-light', 'text-dark');

                // Atualizar todos os cards
                document.querySelectorAll('.card').forEach(card => {
                    card.classList.add('bg-dark', 'text-light');
                    card.classList.remove('bg-light', 'text-dark');
                });

                localStorage.setItem('darkMode', 'enabled');
            }

            function desativarModoEscuro() {
                document.body.classList.add('bg-light', 'text-dark');
                document.body.classList.remove('bg-dark', 'text-light');

                // Atualizar todos os cards
                document.querySelectorAll('.card').forEach(card => {
                    card.classList.add('bg-light', 'text-dark');
                    card.classList.remove('bg-dark', 'text-light');
                });

                localStorage.setItem('darkMode', 'disabled');
            }
        });

    </script>

</body>
</html>
